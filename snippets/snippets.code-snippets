{
  "Common Type": {
    "prefix": "orct",
    "body": ["export type ${1:${TM_FILENAME_BASE}} = ${2:};"],
    "description": "Common Type"
  },
  "Common Interface": {
    "prefix": "orci",
    "body": ["export interface ${1:${TM_FILENAME_BASE}} {", "  ${2:}", "}"],
    "description": "Common Interface"
  },
  "Common Util Fnc": {
    "prefix": "orcuf",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = (${2:}) => {",
      "  ${3:}",
      "};"
    ],
    "description": "Common Util Fnc"
  },
  "Common Hook": {
    "prefix": "orch",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = (${2:}) => {",
      "  ${3:}",
      "};"
    ],
    "description": "Common Hook"
  },
  "Common Constant": {
    "prefix": "orcc",
    "body": ["export const ${1:${TM_FILENAME_BASE}} = {", "  ${2:}", "};"],
    "description": "Common Constant"
  },
  "Zustand Store With Devtools": {
    "prefix": "orzsd",
    "body": [
      "import { create } from \"zustand\";",
      "import { devtools } from \"zustand/middleware\";",
      "",
      "type State = {};",
      "",
      "type Actions = {",
      "  reset: () => void;",
      "};",
      "",
      "const initialState: State = {};",
      "",
      "const ${1:${TM_FILENAME_BASE}} = create(",
      "  devtools<State & Actions>((set) => ({",
      "    ...initialState,",
      "    reset: () => set(initialState),",
      "  }))",
      ");",
      "",
      "export default ${1:${TM_FILENAME_BASE}};"
    ],
    "description": "Zustand Store With Devtools"
  },
  "Nextjs Page": {
    "prefix": "ornp",
    "body": [
      "export default function Page() {",
      "  return (",
      "    <main className=\"\">",
      "      ${1:}",
      "    </main>",
      "  );",
      "}"
    ],
    "description": "Nextjs Page"
  },
  "Nextjs Layout": {
    "prefix": "ornla",
    "body": [
      "interface Props {",
      "  children: React.ReactNode;",
      "}",
      "",
      "export default function Layout({ children }: Props) {",
      "  return <div className=\"\">{children}</div>;",
      "}"
    ],
    "description": "Nextjs Layout"
  },
  "Nextjs Loading": {
    "prefix": "ornlo",
    "body": [
      "export default function Loading() {",
      "  return (",
      "    <div className=\"\">",
      "      ${1:}",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "Nextjs Loading"
  },
  "Nextjs Error": {
    "prefix": "orne",
    "body": [
      "\"use client\";",
      "",
      "interface Props {",
      "  error: Error & { digest?: string };",
      "  reset: () => void;",
      "}",
      "",
      "export default function Error({ error, reset }: Props) {",
      "  return (",
      "    <div className=\"\">",
      "      Error: {error.message}",
      "      <button onClick={() => reset()}>Try again</button>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "Nextjs Error"
  },
  "Nextjs Not Found": {
    "prefix": "ornnf",
    "body": [
      "export default function NotFound() {",
      "  return (",
      "    <div className=\"\">",
      "      ${1:}",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "Nextjs Not Found"
  },
  "Basic Component": {
    "prefix": "orbc",
    "body": [
      "interface Props {",
      "  ${1:}",
      "}",
      "",
      "export default function ${2:${TM_FILENAME_BASE}}({ ${3:} }: Props) {",
      "  return (",
      "    <div className=\"\">",
      "      ${4:}",
      "    </div>",
      "  );",
      "}",
      ""
    ],
    "description": "Basic Component"
  },
  "Jest Testing": {
    "prefix": "orjt",
    "body": [
      "describe(\"${1:}\", () => {",
      "  it(\"${2:}\", () => {",
      "    // given",
      "    ${3:}",
      "    // when",
      "    ${4:}",
      "    // then",
      "    ${5:}",
      "  });",
      "});"
    ],
    "description": "Jest Testing"
  },
  "use client": {
    "prefix": "oruc",
    "body": [
      "'use client';"
    ],
    "description": "use client"
  }
}
